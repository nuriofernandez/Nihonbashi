{"version":3,"sources":["components/Button/index.jsx","components/Preview/index.jsx","views/QuestionDialog/index.jsx","utils/Maths.js","pages/romanji-to-hiragana/characters-database.js","pages/romanji-to-hiragana/generator.js","pages/romanji-to-hiragana/index.jsx","pages/romanji-to-katakana/characters-database.js","pages/romanji-to-katakana/generator.js","pages/romanji-to-katakana/index.jsx","pages/romanji-to-hiragana-full/characters-database.js","pages/romanji-to-hiragana-full/generator.js","pages/romanji-to-hiragana-full/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","className","this","props","children","Component","Preview","QuestionDialog","answers","correct","handleAnswer","locked","extra","shake","disabled","onClick","min","max","Math","floor","random","characters","hiragana","romanji","randomCharacter","Maths","length","correctAnswer","sort","RomanjiToHiragana","state","playEffect","known","regenerate","unknowns","filter","char","some","k","alert","push","generateNotKnownCharacter","setState","CharacterGenerator","answerId","answerCharacter","setTimeout","handleCorrect","handleFail","romanjiAnsewers","katakana","RomanjiToKatakana","RomanjiToHiraganaFull","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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AED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1B,CAAED,SAAU,SAAKC,QAAS,MAC1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","file":"static/js/main.ea419cde.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport \"./style.css\"\n\nclass Button extends Component {\n\n    render() {\n        return (\n            <button className=\"Button\" {...this.props}>\n                { this.props.children}\n            </button >\n        );\n    }\n\n}\n\nexport default Button;","import React, { Component } from 'react'\n\nimport \"./style.css\"\n\nclass Preview extends Component {\n\n    render() {\n        return (\n            <h1 className=\"Preview\">{this.props.children}</h1>\n        );\n    }\n\n}\n\nexport default Preview;","import React, {Component} from 'react'\n\nimport Button from '../../components/Button'\nimport Preview from '../../components/Preview'\n\nimport \"./style.css\"\n\nclass QuestionDialog extends Component {\n\n    render() {\n        const {answers, correct, handleAnswer, locked, shake} = this.props;\n\n        const extra = shake ? \" wrong\" : \"\";\n        return (\n            <div className=\"QuestionDialog_area\">\n                <div className={`QuestionDialog_preview${extra}`}>\n                    <Preview>{correct}</Preview>\n                </div>\n                <div className={`QuestionDialog_answers${extra}`}>\n                    <Button disabled={locked} onClick={() => handleAnswer(0)}>{answers[0]}</Button>\n                    <Button disabled={locked} onClick={() => handleAnswer(1)}>{answers[1]}</Button>\n                    <Button disabled={locked} onClick={() => handleAnswer(2)}>{answers[2]}</Button>\n                    <Button disabled={locked} onClick={() => handleAnswer(3)}>{answers[3]}</Button>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default QuestionDialog;\n","const randomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default { randomNumberBetween }\n","export const characters = [\n    { hiragana: \"あ\", romanji: \"a\" },\n    { hiragana: \"い\", romanji: \"i\" },\n    { hiragana: \"う\", romanji: \"u\" },\n    { hiragana: \"え\", romanji: \"e\" },\n    { hiragana: \"お\", romanji: \"o\" },\n    { hiragana: \"ん\", romanji: \"n\" },\n\n    { hiragana: \"か\", romanji: \"ka\" },\n    { hiragana: \"き\", romanji: \"ki\" },\n    { hiragana: \"く\", romanji: \"ku\" },\n    { hiragana: \"け\", romanji: \"ke\" },\n    { hiragana: \"こ\", romanji: \"ko\" },\n\n    { hiragana: \"さ\", romanji: \"sa\" },\n    { hiragana: \"し\", romanji: \"shi\" },\n    { hiragana: \"す\", romanji: \"su\" },\n    { hiragana: \"せ\", romanji: \"se\" },\n    { hiragana: \"そ\", romanji: \"so\" },\n\n    { hiragana: \"た\", romanji: \"ta\" },\n    { hiragana: \"ち\", romanji: \"chi\" },\n    { hiragana: \"つ\", romanji: \"tsu\" },\n    { hiragana: \"て\", romanji: \"te\" },\n    { hiragana: \"と\", romanji: \"to\" },\n\n    { hiragana: \"な\", romanji: \"na\" },\n    { hiragana: \"に\", romanji: \"ni\" },\n    { hiragana: \"ぬ\", romanji: \"nu\" },\n    { hiragana: \"ね\", romanji: \"ne\" },\n    { hiragana: \"の\", romanji: \"no\" },\n\n    { hiragana: \"は\", romanji: \"ha\" },\n    { hiragana: \"ひ\", romanji: \"hi\" },\n    { hiragana: \"ふ\", romanji: \"fu\" },\n    { hiragana: \"へ\", romanji: \"he\" },\n    { hiragana: \"ほ\", romanji: \"ho\" },\n\n    { hiragana: \"ま\", romanji: \"ma\" },\n    { hiragana: \"み\", romanji: \"mi\" },\n    { hiragana: \"む\", romanji: \"mu\" },\n    { hiragana: \"め\", romanji: \"me\" },\n    { hiragana: \"も\", romanji: \"mo\" },\n\n    { hiragana: \"や\", romanji: \"ya\" },\n    { hiragana: \"ゆ\", romanji: \"yu\" },\n    { hiragana: \"よ\", romanji: \"yo\" },\n\n    { hiragana: \"ら\", romanji: \"ra\" },\n    { hiragana: \"り\", romanji: \"ri\" },\n    { hiragana: \"る\", romanji: \"ru\" },\n    { hiragana: \"れ\", romanji: \"re\" },\n    { hiragana: \"ろ\", romanji: \"ro\" },\n\n    { hiragana: \"わ\", romanji: \"wa\" },\n    { hiragana: \"を\", romanji: \"wo\" }\n]\n","import Maths from '../../utils/Maths'\nimport { characters } from './characters-database'\n\nconst randomCharacter = () => {\n    return characters[Maths.randomNumberBetween(0, characters.length - 1)];\n}\n\nconst generateAnswers = (correctAnswer) => {\n    return [\n        correctAnswer,\n        randomCharacter(),\n        randomCharacter(),\n        randomCharacter()\n    ].sort(() => .5 - Math.random());\n}\n\nexport default { randomCharacter, generateAnswers }\n","import React, { Component } from 'react'\n\nimport QuestionDialog from '../../views/QuestionDialog'\n\nimport CharacterGenerator from './generator'\nimport { characters } from './characters-database'\nimport Maths from \"../../utils/Maths\";\n\nclass RomanjiToHiragana extends Component {\n\n    state = {\n        locked: true,\n        playEffect: false,\n        known: [],\n        correct: { hiragana: \"...\", romanji: \"...\" },\n        answers: [\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" }\n        ]\n    };\n\n    componentDidMount() {\n        this.regenerate();\n    }\n\n    generateNotKnownCharacter() {\n        const { known } = this.state;\n\n        const unknowns = characters.filter(char => {\n            return !known.some(k => k.hiragana === char.hiragana);\n        });\n\n        if (unknowns.length === 0) {\n            alert(\"OVER!\")\n            unknowns.push({hiragana: \"💞️\", romanji: \"💞\"})\n        }\n\n        return unknowns[Maths.randomNumberBetween(0, unknowns.length - 1)];\n    }\n\n    regenerate() {\n        const correct = this.generateNotKnownCharacter()\n        this.setState({\n            locked: false,\n            correct: correct,\n            answers: CharacterGenerator.generateAnswers(correct)\n        });\n    }\n\n    handleAnswer(answerId) {\n        const { correct, answers } = this.state;\n        const answerCharacter = answers[answerId];\n\n        this.setState({\n            locked: true\n        });\n\n        setTimeout(() => {\n            if (correct.romanji === answerCharacter.romanji) {\n                this.handleCorrect();\n            } else {\n                this.handleFail();\n            }\n        }, 100);\n    }\n\n    handleFail() {\n        this.setState({\n            playEffect: true\n        })\n        setTimeout(() => {\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 1500);\n    }\n\n    handleCorrect() {\n        this.setState({\n            playEffect: false\n        })\n\n        const { correct, known } = this.state;\n        known.push(correct)\n        this.setState({\n            known: known\n        })\n\n        setTimeout(() => {\n            this.regenerate()\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 500);\n    }\n\n    render() {\n        const { correct, answers, locked, playEffect } = this.state;\n        const romanjiAnsewers = [\n            answers[0].romanji,\n            answers[1].romanji,\n            answers[2].romanji,\n            answers[3].romanji\n        ]\n\n        return (\n            <QuestionDialog shake={playEffect}\n                handleAnswer={(answerId) => this.handleAnswer(answerId)}\n                correct={correct.hiragana}\n                answers={romanjiAnsewers}\n                locked={locked}\n            />\n        );\n    }\n\n}\n\nexport default RomanjiToHiragana;\n","// Note: This doesn't contains dakuten and handakuten.\nexport const characters = [\n    { katakana: \"ア\", romanji: \"a\" },\n    { katakana: \"イ\", romanji: \"i\" },\n    { katakana: \"ウ\", romanji: \"u\" },\n    { katakana: \"エ\", romanji: \"e\" },\n    { katakana: \"オ\", romanji: \"o\" },\n    { katakana: \"カ\", romanji: \"ka\" },\n    { katakana: \"キ\", romanji: \"ki\" },\n    { katakana: \"ク\", romanji: \"ku\" },\n    { katakana: \"ケ\", romanji: \"ke\" },\n    { katakana: \"コ\", romanji: \"ko\" },\n    { katakana: \"サ\", romanji: \"sa\" },\n    { katakana: \"シ\", romanji: \"shi\" },\n    { katakana: \"ス\", romanji: \"su\" },\n    { katakana: \"セ\", romanji: \"se\" },\n    { katakana: \"ソ\", romanji: \"so\" },\n    { katakana: \"タ\", romanji: \"ta\" },\n    { katakana: \"チ\", romanji: \"chi\" },\n    { katakana: \"ツ\", romanji: \"tsu\" },\n    { katakana: \"テ\", romanji: \"te\" },\n    { katakana: \"ト\", romanji: \"to\" },\n    { katakana: \"ナ\", romanji: \"na\" },\n    { katakana: \"ニ\", romanji: \"ni\" },\n    { katakana: \"ヌ\", romanji: \"nu\" },\n    { katakana: \"ネ\", romanji: \"ne\" },\n    { katakana: \"ノ\", romanji: \"no\" },\n    { katakana: \"ハ\", romanji: \"ha\" },\n    { katakana: \"ヒ\", romanji: \"hi\" },\n    { katakana: \"フ\", romanji: \"fu\" },\n    { katakana: \"ヘ\", romanji: \"he\" },\n    { katakana: \"ホ\", romanji: \"ho\" },\n    { katakana: \"マ\", romanji: \"ma\" },\n    { katakana: \"ミ\", romanji: \"mi\" },\n    { katakana: \"ム\", romanji: \"mu\" },\n    { katakana: \"メ\", romanji: \"me\" },\n    { katakana: \"モ\", romanji: \"mo\" },\n    { katakana: \"ヤ\", romanji: \"ya\" },\n    { katakana: \"ユ\", romanji: \"yu\" },\n    { katakana: \"ヨ\", romanji: \"yo\" },\n    { katakana: \"ラ\", romanji: \"ra\" },\n    { katakana: \"リ\", romanji: \"ri\" },\n    { katakana: \"ル\", romanji: \"ru\" },\n    { katakana: \"レ\", romanji: \"re\" },\n    { katakana: \"ロ\", romanji: \"ro\" },\n    { katakana: \"ワ\", romanji: \"wa\" },\n    { katakana: \"ヲ\", romanji: \"wo\" },\n    { katakana: \"ン\", romanji: \"n\" }\n];\n","import Maths from '../../utils/Maths'\nimport { characters } from './characters-database'\n\nconst randomCharacter = () => {\n    return characters[Maths.randomNumberBetween(0, characters.length - 1)];\n}\n\nconst generateAnswers = (correctAnswer) => {\n    return [\n        correctAnswer,\n        randomCharacter(),\n        randomCharacter(),\n        randomCharacter()\n    ].sort(() => .5 - Math.random());\n}\n\nexport default { randomCharacter, generateAnswers }\n","import React, { Component } from 'react'\n\nimport QuestionDialog from '../../views/QuestionDialog'\n\nimport CharacterGenerator from './generator'\nimport { characters } from './characters-database'\nimport Maths from \"../../utils/Maths\";\n\nclass RomanjiToKatakana extends Component {\n\n    state = {\n        locked: true,\n        playEffect: false,\n        known: [],\n        correct: { katakana: \"...\", romanji: \"...\" },\n        answers: [\n            { katakana: \"...\", romanji: \"...\" },\n            { katakana: \"...\", romanji: \"...\" },\n            { katakana: \"...\", romanji: \"...\" },\n            { katakana: \"...\", romanji: \"...\" }\n        ]\n    };\n\n    componentDidMount() {\n        this.regenerate();\n    }\n\n    generateNotKnownCharacter() {\n        const { known } = this.state;\n\n        const unknowns = characters.filter(char => {\n            return !known.some(k => k.katakana === char.katakana);\n        });\n\n        if (unknowns.length === 0) {\n            alert(\"OVER!\")\n            unknowns.push({katakana: \"💞️\", romanji: \"💞\"})\n        }\n\n        return unknowns[Maths.randomNumberBetween(0, unknowns.length - 1)];\n    }\n\n    regenerate() {\n        const correct = this.generateNotKnownCharacter()\n        this.setState({\n            locked: false,\n            correct: correct,\n            answers: CharacterGenerator.generateAnswers(correct)\n        });\n    }\n\n    handleAnswer(answerId) {\n        const { correct, answers } = this.state;\n        const answerCharacter = answers[answerId];\n\n        this.setState({\n            locked: true\n        });\n\n        setTimeout(() => {\n            if (correct.romanji === answerCharacter.romanji) {\n                this.handleCorrect();\n            } else {\n                this.handleFail();\n            }\n        }, 100);\n    }\n\n    handleFail() {\n        this.setState({\n            playEffect: true\n        })\n        setTimeout(() => {\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 1500);\n    }\n\n    handleCorrect() {\n        this.setState({\n            playEffect: false\n        })\n\n        const { correct, known } = this.state;\n        known.push(correct)\n        this.setState({\n            known: known\n        })\n\n        setTimeout(() => {\n            this.regenerate()\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 500);\n    }\n\n    render() {\n        const { correct, answers, locked, playEffect } = this.state;\n        const romanjiAnsewers = [\n            answers[0].romanji,\n            answers[1].romanji,\n            answers[2].romanji,\n            answers[3].romanji\n        ]\n\n        return (\n            <QuestionDialog shake={playEffect}\n                handleAnswer={(answerId) => this.handleAnswer(answerId)}\n                correct={correct.katakana}\n                answers={romanjiAnsewers}\n                locked={locked}\n            />\n        );\n    }\n\n}\n\nexport default RomanjiToKatakana;\n","export const characters = [\n    { hiragana: \"あ\", romanji: \"a\" },\n    { hiragana: \"い\", romanji: \"i\" },\n    { hiragana: \"う\", romanji: \"u\" },\n    { hiragana: \"え\", romanji: \"e\" },\n    { hiragana: \"お\", romanji: \"o\" },\n    { hiragana: \"ん\", romanji: \"n\" },\n    { hiragana: \"か\", romanji: \"ka\" },\n    { hiragana: \"き\", romanji: \"ki\" },\n    { hiragana: \"く\", romanji: \"ku\" },\n    { hiragana: \"け\", romanji: \"ke\" },\n    { hiragana: \"こ\", romanji: \"ko\" },\n    { hiragana: \"さ\", romanji: \"sa\" },\n    { hiragana: \"し\", romanji: \"shi\" },\n    { hiragana: \"す\", romanji: \"su\" },\n    { hiragana: \"せ\", romanji: \"se\" },\n    { hiragana: \"そ\", romanji: \"so\" },\n    { hiragana: \"た\", romanji: \"ta\" },\n    { hiragana: \"ち\", romanji: \"chi\" },\n    { hiragana: \"つ\", romanji: \"tsu\" },\n    { hiragana: \"て\", romanji: \"te\" },\n    { hiragana: \"と\", romanji: \"to\" },\n    { hiragana: \"な\", romanji: \"na\" },\n    { hiragana: \"に\", romanji: \"ni\" },\n    { hiragana: \"ぬ\", romanji: \"nu\" },\n    { hiragana: \"ね\", romanji: \"ne\" },\n    { hiragana: \"の\", romanji: \"no\" },\n    { hiragana: \"は\", romanji: \"ha\" },\n    { hiragana: \"ひ\", romanji: \"hi\" },\n    { hiragana: \"ふ\", romanji: \"fu\" },\n    { hiragana: \"へ\", romanji: \"he\" },\n    { hiragana: \"ほ\", romanji: \"ho\" },\n    { hiragana: \"ま\", romanji: \"ma\" },\n    { hiragana: \"み\", romanji: \"mi\" },\n    { hiragana: \"む\", romanji: \"mu\" },\n    { hiragana: \"め\", romanji: \"me\" },\n    { hiragana: \"も\", romanji: \"mo\" },\n    { hiragana: \"や\", romanji: \"ya\" },\n    { hiragana: \"ゆ\", romanji: \"yu\" },\n    { hiragana: \"よ\", romanji: \"yo\" },\n    { hiragana: \"ら\", romanji: \"ra\" },\n    { hiragana: \"り\", romanji: \"ri\" },\n    { hiragana: \"る\", romanji: \"ru\" },\n    { hiragana: \"れ\", romanji: \"re\" },\n    { hiragana: \"ろ\", romanji: \"ro\" },\n    { hiragana: \"わ\", romanji: \"wa\" },\n    { hiragana: \"を\", romanji: \"wo\" },\n    { hiragana: \"が\", romanji: \"ga\" },\n    { hiragana: \"ぎ\", romanji: \"gi\" },\n    { hiragana: \"ぐ\", romanji: \"gu\" },\n    { hiragana: \"げ\", romanji: \"ge\" },\n    { hiragana: \"ご\", romanji: \"go\" },\n    { hiragana: \"ざ\", romanji: \"za\" },\n    { hiragana: \"じ\", romanji: \"ji\" },\n    { hiragana: \"ず\", romanji: \"zu\" },\n    { hiragana: \"ぜ\", romanji: \"ze\" },\n    { hiragana: \"ぞ\", romanji: \"zo\" },\n    { hiragana: \"だ\", romanji: \"da\" },\n    { hiragana: \"ぢ\", romanji: \"ji\" },\n    { hiragana: \"づ\", romanji: \"zu\" },\n    { hiragana: \"で\", romanji: \"de\" },\n    { hiragana: \"ど\", romanji: \"do\" },\n    { hiragana: \"ば\", romanji: \"ba\" },\n    { hiragana: \"び\", romanji: \"bi\" },\n    { hiragana: \"ぶ\", romanji: \"bu\" },\n    { hiragana: \"べ\", romanji: \"be\" },\n    { hiragana: \"ぼ\", romanji: \"bo\" },\n    { hiragana: \"ぱ\", romanji: \"pa\" },\n    { hiragana: \"ぴ\", romanji: \"pi\" },\n    { hiragana: \"ぷ\", romanji: \"pu\" },\n    { hiragana: \"ぺ\", romanji: \"pe\" },\n    { hiragana: \"ぽ\", romanji: \"po\" }\n]\n","import Maths from '../../utils/Maths'\nimport { characters } from './characters-database'\n\nconst randomCharacter = () => {\n    return characters[Maths.randomNumberBetween(0, characters.length - 1)];\n}\n\nconst generateAnswers = (correctAnswer) => {\n    return [\n        correctAnswer,\n        randomCharacter(),\n        randomCharacter(),\n        randomCharacter()\n    ].sort(() => .5 - Math.random());\n}\n\nexport default { randomCharacter, generateAnswers }\n","import React, { Component } from 'react'\n\nimport QuestionDialog from '../../views/QuestionDialog'\n\nimport CharacterGenerator from './generator'\nimport { characters } from './characters-database'\nimport Maths from \"../../utils/Maths\";\n\nclass RomanjiToHiraganaFull extends Component {\n\n    state = {\n        locked: true,\n        playEffect: false,\n        known: [],\n        correct: { hiragana: \"...\", romanji: \"...\" },\n        answers: [\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" },\n            { hiragana: \"...\", romanji: \"...\" }\n        ]\n    };\n\n    componentDidMount() {\n        this.regenerate();\n    }\n\n    generateNotKnownCharacter() {\n        const { known } = this.state;\n\n        const unknowns = characters.filter(char => {\n            return !known.some(k => k.hiragana === char.hiragana);\n        });\n\n        if (unknowns.length === 0) {\n            alert(\"OVER!\")\n            unknowns.push({hiragana: \"💞️\", romanji: \"💞\"})\n        }\n\n        return unknowns[Maths.randomNumberBetween(0, unknowns.length - 1)];\n    }\n\n    regenerate() {\n        const correct = this.generateNotKnownCharacter()\n        this.setState({\n            locked: false,\n            correct: correct,\n            answers: CharacterGenerator.generateAnswers(correct)\n        });\n    }\n\n    handleAnswer(answerId) {\n        const { correct, answers } = this.state;\n        const answerCharacter = answers[answerId];\n\n        this.setState({\n            locked: true\n        });\n\n        setTimeout(() => {\n            if (correct.romanji === answerCharacter.romanji) {\n                this.handleCorrect();\n            } else {\n                this.handleFail();\n            }\n        }, 100);\n    }\n\n    handleFail() {\n        this.setState({\n            playEffect: true\n        })\n        setTimeout(() => {\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 1500);\n    }\n\n    handleCorrect() {\n        this.setState({\n            playEffect: false\n        })\n\n        const { correct, known } = this.state;\n        known.push(correct)\n        this.setState({\n            known: known\n        })\n\n        setTimeout(() => {\n            this.regenerate()\n            this.setState({\n                locked: false,\n                playEffect: false\n            })\n        }, 500);\n    }\n\n    render() {\n        const { correct, answers, locked, playEffect } = this.state;\n        const romanjiAnsewers = [\n            answers[0].romanji,\n            answers[1].romanji,\n            answers[2].romanji,\n            answers[3].romanji\n        ]\n\n        return (\n            <QuestionDialog shake={playEffect}\n                handleAnswer={(answerId) => this.handleAnswer(answerId)}\n                correct={correct.hiragana}\n                answers={romanjiAnsewers}\n                locked={locked}\n            />\n        );\n    }\n\n}\n\nexport default RomanjiToHiraganaFull;\n","import React, { Component } from 'react'\nimport './App.css';\n\nimport { Routes, Route } from \"react-router-dom\"\n\nimport RomanjiToHiragana from './pages/romanji-to-hiragana';\nimport RomanjiToKatakana from \"./pages/romanji-to-katakana\";\nimport RomanjiToHiraganaFull from \"./pages/romanji-to-hiragana-full\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          <Routes>\n              <Route path=\"/\" element={ <RomanjiToHiraganaFull /> } />\n              <Route path=\"hiragana\" element={ <RomanjiToHiragana /> } />\n              <Route path=\"katakana\" element={ <RomanjiToKatakana /> } />\n          </Routes>\n        </header>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}